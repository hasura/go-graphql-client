name: Unit tests

on:
  push:
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
      - "example/hasura/docker-compose.yaml"

jobs:
  test-go:
    name: Run Go lint and unit tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.16.4"
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install dependencies
        run: go get -t -v ./...
      - name: Format
        run: diff -u <(echo -n) <(gofmt -d -s .)
      - name: Vet
        run: go vet ./...
      - name: Setup integration test infrastructure
        run: |
          cd ./example/hasura
          docker-compose up -d
      - name: Wait until hasura service online
        shell: bash
        run: |
          printf "waiting for hasura service:\t "
          for i in {1..120};
          do
            local code="$(curl -s -o /dev/null -m 2 -w '%{http_code}' $1)"
            if [[ $code != "200" ]]; then
              printf "."
              sleep 1
            else
              printf "\r\033[K$1:\t ${GREEN}OK${NC}\n"
              exit 0
            fi
          done

          printf "\n${RED}ERROR${NC}: the hasura service is failed to start
          docker-compose logs 
          exit 1
      - name: Run Go unit tests
        run: go test -v -race -coverprofile=coverage.out ./...
      - name: Go coverage format
        run: |
          go get github.com/boumenot/gocover-cobertura
          gocover-cobertura < coverage.out > coverage.xml
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "60 80"
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
